services:
  pipeline:     # This is our stuff
    build:
      context: WasteAnnotator
      dockerfile: ./docker/Dockerfile
    ports:
      - "8669:8669"
    stdin_open: true
    tty: true
    volumes:
      - type: bind
        source: ./WasteAnnotator
        target: /waste-annotator
    links:
      - 'api:auto-fl'

  api:
    build:
      context: ./AutoFL
      dockerfile: ./docker/Dockerfile
    ports:
      - "8888:8888"
      - "8000:8000"
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - type: bind
        source: ./AutoFL
        target: /autofl


  # Separate database for storing component labelling.
  db_pipeline:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "pipeline"
      POSTGRES_USER: "pipeline_user"
      POSTGRES_PASSWORD: "pipeline_pw"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
        - "4432:5432"
    volumes:
      - ./pipelinedb:/var/lib/postgresql/data
      - ./WasteAnnotator/docker/sql:/docker-entrypoint-initdb.d/

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "auto_fl"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "temp"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
        - "5432:5432"
    volumes:
      - ./auto_fl_db:/var/lib/postgresql/data
      - ./AutoFL/docker/sql:/docker-entrypoint-initdb.d/

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

# ui service not necessarily needed
#  ui:
#    build:
#      context: ./AutoFL/autofl-ui/
#      dockerfile: ./docker/Dockerfile
#    ports:
#      - "8501:8501"
#    stdin_open: true # docker run -i
#    tty: true        # docker run -t
#    volumes:
#      - type: bind
#        source: /AutoFL/autofl-ui/
#        target: /AutoFL/autofl-ui
#    links:
#      - 'api:auto-fl'